server:
  port: 80
spring:
  shardingsphere:
    # 数据源配置
    datasource:
      # 数据源名称，多数据源以逗号分隔
      names: db0,db1
      db0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/device0?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
        username: root
        password: '!qaz2wsx'
      db1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/device1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
        username: root
        password: '!qaz2wsx'
    # 分片规则配置
    rules:
      sharding:
        default-database-strategy:
          standard:
            sharding-column: id
            sharding-algorithm-name: database-inline
        tables:
          router_config:
            actual-data-nodes: ds$->{0..1}.router_config_$->{0..2}
            table-strategy:
              standard:
                sharding-column: id
                sharding-algorithm-name: t-router-config-inline
            key-generate-strategy:
              column: id
              key-generator-name: snowflake
        sharding-algorithms:
          database-inline:
            type: INLINE
            props:
              algorithm-expression: ds$->{id % 2}
          t-router-config-inline:
            type: INLINE
            props:
              algorithm-expression: router_config_$->{id % 3}
        key-generators:
          snowflake:
            type: SNOWFLAKE
    # 展示执行 SQL
    props:
      sql-show: true